from datetime import timedelta
from utils import to_minutes_seconds


class en:
    _language_name = 'english'

    requires_to_be_connected_to_a_voice_channel = 'you must be connected to a voice channel to use this command'
    invalid_duration_str = 'invalid duration'

    time_is_over = 'time is over'
    timer_is_stopped = 'timer is stopped'

    @staticmethod
    def start_timer(duration: timedelta):
        return f'setting a timer for {en._to_time_str(duration, include_flat=True)}. 3, 2, 1, GO!'

    @staticmethod
    def timer_notification(time_left: timedelta) -> str:
        return f'{en._to_time_str(time_left)} left'

    invalid_index = 'invalid index'
    voice_set_successfully = 'voice was set successfully'
    language_changed_to = 'language was changed to'

    @staticmethod
    def _to_time_str(time: timedelta, include_flat=False) -> str:
        minutes, seconds = to_minutes_seconds(time)
        ret = ''
        if minutes != 0:
            ret += f'{minutes} {"minute" if minutes == 1 else "minutes"}'

        if minutes == 0 or seconds != 0:
            ret += f'{seconds} {"second" if seconds == 1 else "seconds"}'
        elif include_flat:
            ret += 'flat'

        return ret


class ru:
    _language_name = 'russian'

    requires_to_be_connected_to_a_voice_channel = '–≤—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω—ã –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É —á–∞—Ç—É, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É'
    invalid_duration_str = '–Ω–µ–≤–µ—Ä–Ω–æ–µ –≤—Ä–µ–º—è'

    time_is_over = '–≤—Ä–µ–º—è –≤—ã—à–ª–æ'
    timer_is_stopped = '—Ç–∞–π–º–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'

    @staticmethod
    def start_timer(duration: timedelta):
        return f'–∑–∞–ø—É—Å–∫–∞—é —Ç–∞–π–º–µ—Ä –Ω–∞ {ru._to_time_str(duration)}. 3, 2, 1, –í—Ä–µ–º—è –ø–æ—à–ª–æ!'

    @staticmethod
    def timer_notification(time_left: timedelta) -> str:
        return f'–æ—Å—Ç–∞–ª–æ—Å—å {ru._to_time_str(time_left)}'

    @staticmethod
    def _to_time_str(time: timedelta) -> str:
        minutes, seconds = to_minutes_seconds(time)
        ret = ''
        if minutes != 0:
            ret += f'{minutes} {"–º–∏–Ω—É—Ç–∞" if minutes == 1 else "–º–∏–Ω—É—Ç"}'

        if minutes == 0 or seconds != 0:
            ret += f'{seconds} {"—Å–µ–∫—É–Ω–¥–∞" if seconds == 1 else "—Å–µ–∫—É–Ω–¥"}'

        return ret

    invalid_index = '–Ω–µ–≤–µ—Ä–Ω—ã–π –∏–Ω–¥–µ–∫—Å'
    voice_set_successfully = '–≥–æ–ª–æ—Å —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω'
    language_changed_to = '—è–∑—ã–∫ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞'


texts = {'en': en, 'ru': ru}


class reactions:
    ok_hand = 'üëå'
